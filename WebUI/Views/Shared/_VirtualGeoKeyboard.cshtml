@model string

<script>

    $(function () {
        $('.keyboard-letter').click(function (e) {
            var isshift = $('#vgkShift').data("isshift");
            var letter = (!isshift || !$(this).data("geo-shiftkey")) ? $(this).data("geo-key") : $(this).data("geo-shiftkey");
            var tbTranslation = $('#@Model');
            tbTranslation.focus();
            var text = $(tbTranslation).val();
            switch (letter) {
                case '^': /* Shift */
                    $('.keyboard-letter').each(function (index, element) {
                        if ($(element).data("geo-shiftkey"))
                        {
                            $(element).text(isshift ? $(element).data("geo-key") : $(element).data("geo-shiftkey"))
                        }
                    })
                    $(this).data("isshift", !isshift);
                    break;
                case '<': /* Backspace */
                    $(tbTranslation).val(text.slice(0, -1));
                    break;
                case '_': /* Space */
                    $(tbTranslation).val(text + " ");
                    break;
                default:
                    $(tbTranslation).val(text + letter);
                    break;
            }
        })
    });

    $(function () {
        $('#@Model').on('focus click tap', function (e) {
            if ($('#virtual-geo-keyboard').is(':visible')) {
                $('#@Model').blur();
            }
        })
    })
</script>

<div class="keyboard" id="virtual-geo-keyboard">
    <ul class="ul-reset">
        @{
            string letters = "1ქწერტყუიოპ2ასდფგჰჯკლ3^ზხცვბნმ<4_:/-ჭ-ღთ-----/-შ----ჟ--/^ძ-ჩ----<4_";

            foreach (var letter in letters.Split(':')[0])
            {
                char shiftletter = letters.Split(':')[1][letters.Split(':')[0].IndexOf(letter)];
                switch (letter)
                {
                    case '1':
                        <li class="keyboard-letter-blank keyboard-letter-blank-1 keyboard-letter-newrow"></li>
                        break;
                    case '2':
                        <li class="keyboard-letter-blank keyboard-letter-blank-2 keyboard-letter-newrow"></li>
                        break;
                    case '3':
                        <!-- -->
                        break;
                    case '^': /* Shift */
                        <li class="keyboard-letter keyboard-letter-shift keyboard-letter-newrow" id="vgkShift" data-geo-key="@letter" data-isshift="false"><span class="glyphicon glyphicon-open"></span></li>
                        break;
                    case '<': /* Backspace */
                        <li class="keyboard-letter keyboard-letter-backspace" data-geo-key="@letter"><span class="glyphicon glyphicon-arrow-left"></span></li>
                        break;
                    case '4':
                        <li class="keyboard-letter-blank keyboard-letter-blank-4 keyboard-letter-newrow"></li>
                        break;
                    case '_': /* Space */
                        <li class="keyboard-letter keyboard-letter-space" data-geo-key="@letter"></li>
                        break;
                    default:
                        <li class="keyboard-letter" data-geo-key="@letter" data-geo-shiftkey="@shiftletter">@letter</li>
                        break;
                }

            }
        }

    </ul>
</div>

